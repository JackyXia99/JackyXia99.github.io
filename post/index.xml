<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on A Look at Pokemon Health Across the World</title>
    <link>/post/</link>
    <description>Recent content in Posts on A Look at Pokemon Health Across the World</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <lastBuildDate>Sun, 09 May 2021 00:00:00 +0000</lastBuildDate><atom:link href="/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Image</title>
      <link>/post/2021/05/09/image/</link>
      <pubDate>Sun, 09 May 2021 00:00:00 +0000</pubDate>
      
      <guid>/post/2021/05/09/image/</guid>
      <description>My favorite pokemon!</description>
    </item>
    
    <item>
      <title>Python Example</title>
      <link>/post/2021/05/09/welcome/</link>
      <pubDate>Sun, 09 May 2021 00:00:00 +0000</pubDate>
      
      <guid>/post/2021/05/09/welcome/</guid>
      <description> import pandas as pd import seaborn as sns iris=sns.load_dataset(&amp;#39;iris&amp;#39;) iris.to_csv(&amp;quot;iris.csv&amp;quot;) iris=pd.read_csv(&amp;quot;iris.csv&amp;quot;,index_col=0) iris[&amp;#39;sepalarea&amp;#39;]=iris[&amp;#39;sepal_length&amp;#39;]*iris[&amp;#39;sepal_width&amp;#39;] iris[&amp;#39;petalarea&amp;#39;]=iris[&amp;#39;petal_length&amp;#39;]*iris[&amp;#39;petal_width&amp;#39;] iris[(iris[&amp;quot;sepalarea&amp;quot;]&amp;gt;25) &amp;amp; (iris[&amp;quot;petalarea&amp;quot;]&amp;gt;15)] #Assuming sepals/petals were rectangles, a species with both large sepal and petal area was virginica. ## sepal_length sepal_width petal_length ... species sepalarea petalarea ## 109 7.2 3.6 6.1 ... virginica 25.92 15.25 ## ## [1 rows x 7 columns] </description>
    </item>
    
    <item>
      <title>Reticulate</title>
      <link>/post/2021/05/09/reticulate/</link>
      <pubDate>Sun, 09 May 2021 00:00:00 +0000</pubDate>
      
      <guid>/post/2021/05/09/reticulate/</guid>
      <description> #R chunk library(reticulate) hi&amp;lt;-&amp;quot;Hello&amp;quot; #Python chunk hi=&amp;quot;world&amp;quot; print(r.hi,hi) ## Hello world #Python chunk x=list(range(100)) x ## [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99] y=2 #R chunk py$x*py$y ## [1] 0 2 4 6 8 10 12 14 16 18 20 22 24 26 28 30 32 34 ## [19] 36 38 40 42 44 46 48 50 52 54 56 58 60 62 64 66 68 70 ## [37] 72 74 76 78 80 82 84 86 88 90 92 94 96 98 100 102 104 106 ## [55] 108 110 112 114 116 118 120 122 124 126 128 130 132 134 136 138 140 142 ## [73] 144 146 148 150 152 154 156 158 160 162 164 166 168 170 172 174 176 178 ## [91] 180 182 184 186 188 190 192 194 196 198 </description>
    </item>
    
  </channel>
</rss>
